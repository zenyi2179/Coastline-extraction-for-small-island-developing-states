# -*- coding: utf-8 -*-
"""
Generated by ArcGIS ModelBuilder on : 2025-01-08 09:04:02
"""
import os
import arcpy
import numpy as np
from dbfread import DBF
import pandas as pd

def calculate_statistics(data_2d):
    """
    计算DBF文件中 'NEAR_DIST' 列的统计数据：
    - 平均值
    - 值小于30的个数百分比
    - 值小于60的个数百分比
    - 标准差
    - 均方根误差 (RMSE)

    参数:
    dbf_file_path (str): DBF文件路径

    返回:
    dict: 包含上述统计数据的字典
    """

    near_dist_values = []
    for record in data_2d:
        # 提取第二列的值（索引为1）
        value =record[3]
        if value >= 0:
            near_dist_values.append(value)

    # 将数据转化为numpy数组
    near_dist_values = np.array(near_dist_values)

    # 计算统计值

    count_30 = np.sum(near_dist_values <= 30)
    count_60 = np.sum(near_dist_values <= 60)
    count_90 = np.sum(near_dist_values <= 90)
    count_all = np.sum(near_dist_values <= 150)

    percent_30 = count_30 / count_all * 100
    percent_60 = count_60 / count_all * 100
    percent_90 = count_90 / count_all * 100

    mean_value = np.mean(near_dist_values)
    std_dev = np.std(near_dist_values)
    rmse = np.sqrt(np.mean(near_dist_values ** 2))

    # 返回结果
    return {
        'count_30': count_30,
        'count_60': count_60,
        'count_90': count_90,
        'count_all': count_all,

        'percent_30': percent_30,
        'percent_60': percent_60,
        'percent_90': percent_90,

        'mean_value': mean_value,
        'std_dev': std_dev,
        'rmse': rmse
    }

if __name__ == '__main__':
    # Global Environment settings
    sids_cou_list = ["ATG",
                     "BHS",
                     "BLZ",
                     "BRB",
                     "COM",
                     "CPV",
                     "CUB",
                     "DMA",
                     "DOM",
                     "FJI",
                     "FSM",
                     "GNB",
                     "GRD",
                     "GUY",
                     "HTI",
                     "JAM",
                     "KIR",
                     "KNA",
                     "LCA",
                     "MDV",
                     "MHL",
                     "MUS",
                     "NRU",
                     "PLW",
                     "PNG",
                     "SGP",
                     "SLB",
                     "STP",
                     "SUR",
                     "SYC",
                     "TLS",
                     "TON",
                     "TTO",
                     "TUV",
                     "VCT",
                     "VUT",
                     "WSM",
                     ]
    print("mean_value	std_dev	rmse	percent_30	percent_60	percent_90	count_30	count_60	count_90	count_all")
    # ------------------------------------------------------
    # SIDS_BV
    print('SIDS_BV')
    for year in [2010, 2015, 2020]:
        data_2d = []
        for sid in sids_cou_list:
            # 示例使用 sids
            folder_path = fr"E:\_OrderingProject\F_IslandsBoundaryChange\b_ArcData\_AccuracyEvaluation\{sid}\{year}"
            near_table = os.path.join(folder_path, fr'SP_{sid}_{str(year)[-2:]}.dbf')
            dbf = DBF(near_table, encoding='utf-8')
            for record in dbf:
                row = list(record.values())
                data_2d.append(row)

        statistics = calculate_statistics(data_2d)
        print(statistics['mean_value'], statistics['std_dev'], statistics['rmse'],
              statistics['percent_30'], statistics['percent_60'], statistics['percent_90'],
              statistics['count_30'], statistics['count_60'], statistics['count_90'], statistics['count_all'],)
    # ------------------------------------------------------
    # GCL_FCS30
    print('GCL_FCS30')
    for year in [2010, 2015, 2020]:
        data_2d = []
        for sid in sids_cou_list:
            # 示例使用 sids
            folder_path = fr"E:\_OrderingProject\F_IslandsBoundaryChange\b_ArcData\_AccuracyEvaluation\{sid}\{year}\ThirdPartyDataSource"
            near_table = os.path.join(folder_path, fr'GCL_SP_{sid}_{str(year)[-2:]}.dbf')
            dbf = DBF(near_table, encoding='utf-8')
            for record in dbf:
                row = list(record.values())
                data_2d.append(row)

        statistics = calculate_statistics(data_2d)
        print(statistics['mean_value'], statistics['std_dev'], statistics['rmse'],
              statistics['percent_30'], statistics['percent_60'], statistics['percent_90'],
              statistics['count_30'], statistics['count_60'], statistics['count_90'], statistics['count_all'], )
    # ------------------------------------------------------
    # OSM
    print('OSM')
    for year in [2020]:
        data_2d = []
        for sid in sids_cou_list:
            # 示例使用 sids
            folder_path = fr"E:\_OrderingProject\F_IslandsBoundaryChange\b_ArcData\_AccuracyEvaluation\{sid}\{year}\ThirdPartyDataSource"
            near_table = os.path.join(folder_path, fr'OSM_SP_{sid}_{str(year)[-2:]}.dbf')
            dbf = DBF(near_table, encoding='utf-8')
            for record in dbf:
                row = list(record.values())
                data_2d.append(row)

        statistics = calculate_statistics(data_2d)
        print(statistics['mean_value'], statistics['std_dev'], statistics['rmse'],
              statistics['percent_30'], statistics['percent_60'], statistics['percent_90'],
              statistics['count_30'], statistics['count_60'], statistics['count_90'], statistics['count_all'], )
    # ------------------------------------------------------
    # GSV
    print('GSV')
    for year in [2015]:
        data_2d = []
        for sid in sids_cou_list:
            # 示例使用 sids
            folder_path = fr"E:\_OrderingProject\F_IslandsBoundaryChange\b_ArcData\_AccuracyEvaluation\{sid}\{year}\ThirdPartyDataSource"
            near_table = os.path.join(folder_path, fr'GSV_SP_{sid}_{str(year)[-2:]}.dbf')
            dbf = DBF(near_table, encoding='utf-8')
            for record in dbf:
                row = list(record.values())
                data_2d.append(row)

        statistics = calculate_statistics(data_2d)
        print(statistics['mean_value'], statistics['std_dev'], statistics['rmse'],
              statistics['percent_30'], statistics['percent_60'], statistics['percent_90'],
              statistics['count_30'], statistics['count_60'], statistics['count_90'], statistics['count_all'], )
    # ------------------------------------------------------
    # GMSSD
    print('GMSSD')
    for year in [2015]:
        data_2d = []
        for sid in sids_cou_list:
            # 示例使用 sids
            folder_path = fr"E:\_OrderingProject\F_IslandsBoundaryChange\b_ArcData\_AccuracyEvaluation\{sid}\{year}\ThirdPartyDataSource"
            near_table = os.path.join(folder_path, fr'GMSSD_SP_{sid}_{str(year)[-2:]}.dbf')
            dbf = DBF(near_table, encoding='utf-8')
            for record in dbf:
                row = list(record.values())
                data_2d.append(row)

        statistics = calculate_statistics(data_2d)
        print(statistics['mean_value'], statistics['std_dev'], statistics['rmse'],
              statistics['percent_30'], statistics['percent_60'], statistics['percent_90'],
              statistics['count_30'], statistics['count_60'], statistics['count_90'], statistics['count_all'], )