# -*- coding: utf-8 -*-
"""
Generated by ArcGIS ModelBuilder on : 2025-04-19 13:25:47
"""
import os
import arcpy


def merge_calculate(in_data_list, out_data):
    # To allow overwriting outputs change overwriteOutput option to True.
    arcpy.env.overwriteOutput = True

    # Process: 合并 (合并) (management)
    temp_merge = fr'in_memory\shp_merge'
    arcpy.management.Merge(
        inputs=in_data_list,
        output=temp_merge)

    # Process: 成对融合 (成对融合) (analysis)
    arcpy.analysis.PairwiseDissolve(
        in_features=temp_merge, out_feature_class=out_data,
        multi_part="MULTI_PART")

    # Process: 计算几何属性 (计算几何属性) (management)
    output_path = arcpy.management.CalculateGeometryAttributes(
        in_features=out_data,
        geometry_property=[["Leng_Geo", "PERIMETER_LENGTH_GEODESIC"], ["Area_Geo", "AREA_GEODESIC"]],
        length_unit="KILOMETERS", area_unit="SQUARE_KILOMETERS", coordinate_format="SAME_AS_INPUT")[0]

    print(fr'merge_calculate: {out_data}')


def GSV(boun_list, work_path):
    print('GSV start:')
    data_name_list = ['Continent', 'Big', 'Small', 'VerySmall']
    for boun in boun_list:
        input_data_path = os.path.join(work_path, boun)

        # 获取文件夹中所有文件
        data_files = os.listdir(input_data_path)

        # 筛选出符合条件的文件
        selected_data_list = []
        for file in data_files:
            if file.endswith('.shp'):  # 确保是 .shp 文件
                # 去掉文件扩展名，只保留文件名
                file_name_without_extension = os.path.splitext(file)[0]
                # 检查文件名是否包含指定的后缀名
                for name in data_name_list:
                    if name in file_name_without_extension:
                        selected_data_list.append(file)
                        break  # 匹配到一个就跳出内层循环

        # 输出结果
        print("Selected files:", selected_data_list)

        # 合并的数据列表
        output_path = os.path.join(input_data_path, fr'_{boun}_merge.shp')
        input_data_list = [os.path.join(input_data_path, selected_data) for selected_data in selected_data_list]
        merge_calculate(in_data_list=input_data_list, out_data=output_path)

def GMSSD_2015(boun_list, work_path):
    print('GMSSD_2015 start:')

    for boun in boun_list:
        data_sids_path = os.path.join(work_path, boun)
        data_files = os.listdir(data_sids_path)
        input_data_list = [os.path.join(data_sids_path, data) for data in data_files if data.endswith('.shp')]

        # 输出结果
        print("Selected files:", input_data_list)

        # 合并的数据列表
        output_path = os.path.join(data_sids_path, fr'_{boun}_merge.shp')
        merge_calculate(in_data_list=input_data_list, out_data=output_path)

def GCL_FCS30(boun_list, extend_year, work_path):
    print('GCL_FCS30 start:')

    for boun in boun_list:
        data_sids_path = os.path.join(work_path, boun)
        data_files = os.listdir(data_sids_path)
        input_data_list = [os.path.join(data_sids_path, data) for data in data_files if data.endswith('.shp')]

        # 输出结果
        print("Selected files:", input_data_list)

        # 合并的数据列表
        output_path = os.path.join(data_sids_path, fr'_{boun}_merge.shp')
        merge_calculate(in_data_list=input_data_list, out_data=output_path)

def SIDS_BV(boun_list, extend_year, work_path):
    print('SIDS_BV start:')

    for boun in boun_list:
        data_sids_path = os.path.join(work_path, boun)
        input_data_list = [os.path.join(data_sids_path, fr"{boun}_BV_{str(extend_year)[-2:]}.shp")]

        # 输出结果
        print("Selected files:", input_data_list)

        # 合并的数据列表
        output_path = os.path.join(data_sids_path, fr'_{boun}_merge_BV.shp')
        merge_calculate(in_data_list=input_data_list, out_data=output_path)

def main():
    # 全 57 国家
    boundary_list = [
        "BMU",
        "KNA",
        "MSR",
        "NRU",
        "BRB",
        "DMA",
        "GUM",
        "NIU",
        "SGP",
        "VCT",
        "AIA",
        "CYM",
        "VGB",
        "VIR",
        "ABW",
        "ASM",
        "CUW",
        "GRD",
        "LCA",
        "MTQ",
        "SXM",
        "ATG",
        "GLP",
        "STP",
        "TCA",
        "COM",
        "WSM",
        "TTO",
        "MUS",
        "TUV",
        "PLW",
        "MNP",
        "JAM",
        "PRI",
        "CPV",
        "TLS",
        "TON",
        "COK",
        "BLZ",
        "GNB",
        "SYC",
        "HTI",
        "DOM",
        "VUT",
        "MDV",
        "NCL",
        "KIR",
        "MHL",
        "FSM",
        "FJI",
        "SUR",
        "SLB",
        "BHS",
        "CUB",
        "GUY",
        "PYF",
        "PNG",
    ]
    # 全 37 国家
    boundary_list = ["ATG",
"BHS",
"BLZ",
"BRB",
"COM",
"CPV",
"CUB",
"DMA",
"DOM",
"FJI",
"FSM",
"GNB",
"GRD",
"GUY",
"HTI",
"JAM",
"KIR",
"KNA",
"LCA",
"MDV",
"MHL",
"MUS",
"NRU",
"PLW",
"PNG",
"SGP",
"SLB",
"STP",
"SUR",
"SYC",
"TLS",
"TON",
"TTO",
"TUV",
"VCT",
"VUT",
"WSM",
]

    # SIDS_BV -------------------------------------------------------------------------------------------
    # work_path = fr'E:\_OrderingProject\F_IslandsBoundaryChange\b_ArcData\k_SIDS_Smooth'
    # SIDS_BV(boun_list=boundary_list, extend_year=year, work_path=work_path)
    # GSV -------------------------------------------------------------------------------------------
    # work_path = fr'E:\_OrderingProject\F_IslandsBoundaryChange\b_ArcData\_ThirdProductEvaluation\GSV'
    # GSV(boun_list=boundary_list, work_path=work_path)
    # -----------------------------------------------------------------------------------------------------------------
    # work_path = fr'E:\_OrderingProject\F_IslandsBoundaryChange\b_ArcData\_ThirdProductEvaluation\GMSSD_2015'
    # GMSSD_2015(boun_list=boundary_list, work_path=work_path)
    # -----------------------------------------------------------------------------------------------------------------
    # work_path = fr'E:\_OrderingProject\F_IslandsBoundaryChange\b_ArcData\_ThirdProductEvaluation\GCL_FCS30_{str(year)[-2:]}'
    # GCL_FCS30(boun_list=boundary_list, extend_year=year, work_path=work_path)
    # -----------------------------------------------------------------------------------------------------------------
    for year in [2015]:
        work_path = fr'E:\_OrderingProject\F_IslandsBoundaryChange\b_ArcData\_ThirdProductEvaluation\SIDS_CL_{str(year)[-2:]}'
        SIDS_BV(boun_list=boundary_list, extend_year=year, work_path=work_path)


if __name__ == '__main__':
    main()
